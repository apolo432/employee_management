# Generated by Django 5.0.3 on 2025-09-26 09:36

import django.db.models.deletion
import django.utils.timezone
import turbodrf.mixins
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('employees', '0004_employee_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Название права')),
                ('codename', models.CharField(max_length=100, unique=True, verbose_name='Кодовое имя')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('app_label', models.CharField(max_length=100, verbose_name='Приложение')),
                ('model_name', models.CharField(max_length=100, verbose_name='Модель')),
                ('permission_type', models.CharField(choices=[('view', 'Просмотр'), ('add', 'Добавление'), ('change', 'Изменение'), ('delete', 'Удаление'), ('export', 'Экспорт'), ('approve', 'Утверждение'), ('manage', 'Управление')], max_length=20, verbose_name='Тип права')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Право доступа',
                'verbose_name_plural': 'Права доступа',
                'ordering': ['app_label', 'model_name', 'permission_type'],
            },
            bases=(models.Model, turbodrf.mixins.TurboDRFMixin),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название роли')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('role_type', models.CharField(choices=[('system', 'Системная роль'), ('business', 'Бизнес-роль'), ('temporary', 'Временная роль')], default='business', max_length=20, verbose_name='Тип роли')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('is_system_role', models.BooleanField(default=False, help_text='Системные роли нельзя удалять или изменять', verbose_name='Системная роль')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
                'ordering': ['name'],
            },
            bases=(models.Model, turbodrf.mixins.TurboDRFMixin),
        ),
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('view', 'Просмотр'), ('add', 'Добавление'), ('change', 'Изменение'), ('delete', 'Удаление'), ('export', 'Экспорт'), ('approve', 'Утверждение'), ('deny', 'Отказ в доступе')], max_length=20, verbose_name='Действие')),
                ('object_type', models.CharField(max_length=100, verbose_name='Тип объекта')),
                ('object_id', models.UUIDField(blank=True, null=True, verbose_name='ID объекта')),
                ('object_name', models.CharField(blank=True, max_length=200, verbose_name='Название объекта')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('method', models.CharField(blank=True, max_length=10, verbose_name='HTTP метод')),
                ('success', models.BooleanField(default=True, verbose_name='Успешно')),
                ('error_message', models.TextField(blank=True, verbose_name='Сообщение об ошибке')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время доступа')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запись доступа',
                'verbose_name_plural': 'Записи доступа',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='employees_a_user_id_c1aa4f_idx'), models.Index(fields=['action', 'timestamp'], name='employees_a_action_5b97f4_idx'), models.Index(fields=['object_type', 'object_id'], name='employees_a_object__58354f_idx'), models.Index(fields=['success', 'timestamp'], name='employees_a_success_605a3d_idx')],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='employees.permission', verbose_name='Право')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='employees.role', verbose_name='Роль')),
            ],
            options={
                'verbose_name': 'Право роли',
                'verbose_name_plural': 'Права ролей',
                'ordering': ['role', 'permission'],
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='TemporaryPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_type', models.CharField(max_length=100, verbose_name='Тип объекта')),
                ('object_id', models.UUIDField(verbose_name='ID объекта')),
                ('valid_from', models.DateTimeField(verbose_name='Действует с')),
                ('valid_until', models.DateTimeField(verbose_name='Действует до')),
                ('reason', models.TextField(verbose_name='Причина предоставления')),
                ('granted_at', models.DateTimeField(auto_now_add=True, verbose_name='Предоставлено')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('granted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_temporary_permissions', to=settings.AUTH_USER_MODEL, verbose_name='Предоставлено пользователем')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporary_permissions', to='employees.permission', verbose_name='Право')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporary_permissions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Временное право',
                'verbose_name_plural': 'Временные права',
                'ordering': ['-granted_at'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='employees_t_user_id_df8279_idx'), models.Index(fields=['valid_from', 'valid_until'], name='employees_t_valid_f_dba526_idx'), models.Index(fields=['object_type', 'object_id'], name='employees_t_object__6a19ba_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scope_type', models.CharField(choices=[('global', 'Глобальная'), ('organization', 'По организации'), ('department', 'По департаменту'), ('division', 'По отделу'), ('employee', 'По сотруднику')], default='global', max_length=20, verbose_name='Область действия')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Действует с')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='Действует до')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Назначена')),
                ('reason', models.TextField(blank=True, verbose_name='Причина назначения')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL, verbose_name='Назначена пользователем')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='employees.department', verbose_name='Департамент')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='employees.division', verbose_name='Отдел')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='employees.employee', verbose_name='Сотрудник')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='employees.organization', verbose_name='Организация')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='employees.role', verbose_name='Роль')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Роль пользователя',
                'verbose_name_plural': 'Роли пользователей',
                'ordering': ['-assigned_at'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='employees_u_user_id_961c02_idx'), models.Index(fields=['role', 'is_active'], name='employees_u_role_id_1b7d66_idx'), models.Index(fields=['scope_type', 'organization'], name='employees_u_scope_t_408b36_idx'), models.Index(fields=['scope_type', 'department'], name='employees_u_scope_t_7c4904_idx'), models.Index(fields=['scope_type', 'division'], name='employees_u_scope_t_48917e_idx')],
            },
            bases=(models.Model, turbodrf.mixins.TurboDRFMixin),
        ),
    ]
